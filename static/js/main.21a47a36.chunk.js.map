{"version":3,"sources":["components/Adjuster.js","components/Header.js","components/Bar.js","components/Array.js","sortingAlgorithms/helperFuncs.js","sortingAlgorithms/bubbleSort.js","sortingAlgorithms/quickSort.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Adjuster","setter","title","min","max","isSorting","className","type","onChange","e","target","value","Header","setLength","setSpeed","selectedAlgorithm","setSelectedAlgorithm","onClick","ALGORITHMS","BUBBLE_SORT","style","QUICK_SORT","Bar","color","height","backgroundColor","Array","array","map","element","sleep","delay","Promise","resolve","setTimeout","updateAndDelay","dispatch","time","a","ACTIONS","SET_ELEMENTS","payload","values","slice","speed","console","log","copiedArray","sorted","indexingLength","length","changed","i","COLORS","FOCUSED","INCORRECT","smaller","DEFAULT","FINAL","forEach","quickSort","arr","start","end","partition","index","all","pivot","pivotIndex","globalI","COMPARER","swap","b","temp","Button","text","algorithm","setIsSorting","bubbleSort","href","SET_VALUES","reducer","state","action","App","useReducer","useState","useEffect","newValues","push","Math","floor","random","generateValues","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21a47a36.chunk.js","sourcesContent":["import '../styles/Adjuster.css'\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst Adjuster = ({setter, title, min, max, isSorting}) => {\r\n    return (\r\n        <div className=\"adjuster\">\r\n            <p><b>{title}:</b></p>\r\n            <input className='slider' type=\"range\" min={min} max={max} onChange={(e) => {if (!isSorting) setter(e.target.value)}}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Adjuster\r\n","import Adjuster from './Adjuster'\r\nimport '../styles/Header.css'\r\nimport '../index.css'\r\nimport { ALGORITHMS } from '../App'\r\n\r\nconst Header = ({setLength, setSpeed, selectedAlgorithm, setSelectedAlgorithm, isSorting}) => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <div className=\"adjusters\">\r\n                    <Adjuster setter={setLength} isSorting={isSorting} title={\"Array Size\"} min={4} max={100}/>\r\n                    <Adjuster setter={setSpeed} isSorting={isSorting} title={\"Sorting Speed\"} min={1} max={700}/>\r\n                </div>\r\n                \r\n                <div className=\"title\">\r\n                    <h3>Sorting Algorithm Visualizer</h3>\r\n                </div>\r\n                <div className=\"algorithms\">\r\n                    <a onClick={() => {setSelectedAlgorithm(ALGORITHMS.BUBBLE_SORT)}} style={{'color': selectedAlgorithm == ALGORITHMS.BUBBLE_SORT ? 'red' : 'white'}}>Bubble Sort</a>\r\n                    <a onClick={() => {setSelectedAlgorithm(ALGORITHMS.QUICK_SORT)}} style={{'color': selectedAlgorithm == ALGORITHMS.QUICK_SORT ? 'red' : 'white'}}>Quick Sort</a>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import '../styles/Bar.css'\r\nimport '../index.css'\r\n\r\nconst Bar = ({value, color}) => {\r\n    return (\r\n        <div style={{height: `${value}%`, backgroundColor: color}}className=\"bar\">\r\n            <p className='placeholder'></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bar\r\n","import '../styles/Array.css'\r\nimport Bar from './Bar'\r\n\r\nconst Array = ({array}) => {\r\n\r\n    return (\r\n        <div className=\"array\">\r\n            {array.map((element) => (<Bar value={element.value} color={element.color}/>))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Array\r\n","import { ACTIONS } from \"../App\"\r\n\r\nexport const sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\r\n\r\nexport async function updateAndDelay(dispatch, array, time) {\r\n    dispatch({ type: ACTIONS.SET_ELEMENTS, payload: { values: array.slice()}})              \r\n    await sleep(time)\r\n}\r\n\r\nexport function changeColor(array, color, start, end) {\r\n  let startPosition = (start ? start : 0)\r\n  let endPosition = (end ? end : array.length)\r\n  for (var i = startPosition; i < endPosition; i++) {\r\n    array[i].color = color\r\n  }\r\n}","import { COLORS } from \"../App\"\r\nimport { updateAndDelay } from \"./helperFuncs\"\r\n\r\nexport async function bubbleSort(array, dispatch, speed) {\r\n    console.log(dispatch)\r\n    var copiedArray = array.slice()\r\n    var sorted = false\r\n    var indexingLength = copiedArray.length - 1\r\n    while (!sorted) {\r\n        var changed = false;\r\n        for (var i = 0; i < indexingLength; i++) {\r\n            copiedArray[i].color = COLORS.FOCUSED\r\n            copiedArray[i+1].color = COLORS.FOCUSED\r\n            \r\n            await updateAndDelay(dispatch, copiedArray, speed) \r\n            \r\n            if (copiedArray[i].value > copiedArray[i+1].value) {\r\n                changed = true;\r\n                copiedArray[i].color = COLORS.INCORRECT\r\n                copiedArray[i+1].color = COLORS.INCORRECT\r\n                \r\n                await updateAndDelay(dispatch, copiedArray, speed) \r\n                \r\n                var smaller = copiedArray[i].value\r\n                copiedArray[i].value = copiedArray[i+1].value\r\n                copiedArray[i+1].value = smaller\r\n                \r\n                await updateAndDelay(dispatch, copiedArray, speed) \r\n                \r\n                copiedArray[i].color = COLORS.FOCUSED\r\n                copiedArray[i+1].color = COLORS.FOCUSED  \r\n                \r\n                await updateAndDelay(dispatch, copiedArray, speed) \r\n            }\r\n            copiedArray[i].color = COLORS.DEFAULT\r\n            copiedArray[i+1].color = COLORS.DEFAULT   \r\n        }\r\n        copiedArray[indexingLength].color = COLORS.FINAL \r\n        \r\n        await updateAndDelay(dispatch, copiedArray, 0)\r\n        \r\n        indexingLength --\r\n        if (!changed) {\r\n            sorted = true\r\n        }\r\n    }\r\n    \r\n    copiedArray.forEach((element) => {\r\n        element.color = COLORS.FOCUSED\r\n    })\r\n    \r\n    await updateAndDelay(dispatch, copiedArray, 1000)\r\n    \r\n    copiedArray.forEach((element) => {\r\n        element.color = COLORS.FINAL\r\n    })\r\n    \r\n    await updateAndDelay(dispatch, copiedArray, 0)\r\n} \r\n\r\n\r\n","import { COLORS, DELAYS } from \"../App\"\r\nimport { changeColor, updateAndDelay } from \"./helperFuncs\"\r\n\r\n\r\nexport async function quickSort(arr, start, end, dispatch, speed) {\r\n  await updateAndDelay(dispatch, arr, 0)\r\n  if (start >= end) {\r\n    return;\r\n  }\r\n  \r\n  let index = await partition(arr, start, end, dispatch, speed);\r\n  await Promise.all([quickSort(arr, start, index - 1, dispatch, speed), quickSort(arr, index + 1, end, dispatch, speed)])\r\n  \r\n  await updateAndDelay(dispatch, arr, 0)\r\n}\r\n\r\nasync function partition(arr, start, end, dispatch, speed) {\r\n  let pivot = arr[end]\r\n  let pivotIndex = start\r\n  let globalI = 0\r\n  \r\n  pivot.color = COLORS.COMPARER\r\n  await updateAndDelay(dispatch, arr, speed)\r\n  \r\n  for (let i = start; i < end; i++) {\r\n    arr[i].color = COLORS.FOCUSED\r\n    arr[pivotIndex].color = COLORS.FOCUSED\r\n    await updateAndDelay(dispatch, arr, speed)\r\n    console.log(arr[i].value, pivot.value)\r\n    if (arr[i].value < pivot.value) {\r\n      arr[i].color = COLORS.INCORRECT\r\n      arr[pivotIndex].color = COLORS.INCORRECT\r\n      await updateAndDelay(dispatch, arr, speed) \r\n      swap(arr, i, pivotIndex);\r\n      await updateAndDelay(dispatch, arr, speed) \r\n      arr[i].color = COLORS.FOCUSED\r\n      arr[pivotIndex].color = COLORS.FOCUSED\r\n      await updateAndDelay(dispatch, arr, speed)\r\n      arr[pivotIndex].color = COLORS.DEFAULT\r\n      pivotIndex++;\r\n    }\r\n    arr[i].color = COLORS.DEFAULT\r\n    globalI = i\r\n  }\r\n\r\n  arr[pivotIndex].color = COLORS.INCORRECT\r\n  pivot.color = COLORS.INCORRECT\r\n  await updateAndDelay(dispatch, arr, speed)\r\n  swap(arr, pivotIndex, end);\r\n  arr[end].color = COLORS.DEFAULT\r\n  pivot.color = COLORS.FINAL\r\n  if (globalI === pivotIndex) {\r\n    arr[end].color = COLORS.FINAL\r\n    \r\n  }\r\n  await updateAndDelay(dispatch, arr, speed)\r\n  \r\n  return pivotIndex;\r\n}\r\n\r\nfunction swap(arr, a, b) {\r\n  let temp = arr[a];\r\n  arr[a] = arr[b];\r\n  arr[b] = temp;\r\n}","import React from 'react'\r\nimport { ALGORITHMS, COLORS } from '../App'\r\nimport { bubbleSort } from '../sortingAlgorithms/bubbleSort'\r\nimport { quickSort } from '../sortingAlgorithms/quickSort'\r\nimport '../styles/Button.css'\r\n\r\nconst Button = ({text, array, dispatch, algorithm, speed, setIsSorting}) => {\r\n    return (\r\n        <button onClick={() => algorithm === ALGORITHMS.QUICK_SORT ? quickSort(array, 0, array.length -1, dispatch, speed) : bubbleSort(array, dispatch, speed)} href=\"\" className=\"button\">{text}</button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import Header from './components/Header'\nimport Array from './components/Array'\nimport Button from './components/Button'\nimport { useState, useReducer, useEffect } from 'react'\n\nexport const ACTIONS = {\n    SET_VALUES: 'set-values'\n}\n\nexport const COLORS = {\n  DEFAULT: '#5089C6',\n  FOCUSED: '#1cff7e',\n  INCORRECT: '#ff1c1c',\n  COMPARER: '#ffe70f',\n  FINAL: '#ff4ded', \n}\n\nexport const DELAYS = {\n  FLASH_GREEN: 1000,\n}\n\nexport const ALGORITHMS = {\n  BUBBLE_SORT: 'bubbleSort',\n  QUICK_SORT: 'quickSort'\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.SET_ELEMENTS:\n      return action.payload.values\n    default:\n      return state\n  }\n}\n\nfunction App() {\n  \n  const [array, dispatch] = useReducer(reducer, [])\n  const [length, setLength] = useState(4)\n  const [speed, setSpeed] = useState(700)\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState(ALGORITHMS.BUBBLE_SORT)\n\n  const [isSorting, setIsSorting] = useState(false)\n\n  const generateValues = () => {\n    var newValues = []\n    for (var i = 0; i < length; i++) {\n      newValues.push({value: (Math.floor(Math.random() * (100 - 10) + 10)), color: COLORS.DEFAULT})\n    }\n    dispatch({ type: ACTIONS.SET_ELEMENTS, payload: {values: newValues} })\n  }\n\n  useEffect(() => {\n      generateValues()\n  }, [length])\n\n  useEffect(() => {\n    console.log(speed)\n  }, [speed])\n\n  return (\n    \n    <div className=\"App\">\n      <Header setLength={setLength} setSpeed={setSpeed} selectedAlgorithm={selectedAlgorithm} setSelectedAlgorithm={setSelectedAlgorithm} isSorting={isSorting}/>\n      <Array array={array}/>\n      <Button text={'Sort!'} array={array} dispatch={dispatch} algorithm={selectedAlgorithm} speed={speed} setIsSorting={setIsSorting}/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}